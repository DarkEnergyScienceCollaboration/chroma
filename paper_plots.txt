Figure 1)
  Generated from CHROMA_DIR/bin/intuition/refraction.py
  Output to CHROMA_DIR/bin/intuition/output/chromatic_biases_700.pdf

Figure 2)
  Generated from CHROMA_DIR/bin/intuition/where_the_photons_land.py
  Output to CHROMA_DIR/bin/intuition/output/photon_landings.pdf

Figure 3)
  Requires OpSim output.
  Download http://opsimcvs.tuc.noao.edu/runs/opsim3.61_a/output_opsim3_61.dat.gz and place into
  CHROMA_DIR/bin/opsim/indata/
  From ipython in CHROMA/bin/opsim directory:
    import opsim
    cat = opsim.opsim_parse()
    opsim.savecat(cat) # for faster loading with cat = opsim.loadcat() in the future.
    opsim.epoch_variance_field(cat, 1950)
  Output to epoch_variance_field1950.pdf

Figure 4)
  Requires OpSim output.
  From ipython in CHROMA/bin/opsim directory:
    import opsim
    cat = opsim.loadcat() # load previously cached catalog
    opsim.epoch_variance_bias_fields(cat)
  Output to misregistration_bias_fields.pdf

Figures 5&6)
  Requires processed CatSim catalog.
  Download and process CatSim catalog:
    Load lsst framework: (maybe don't need all of these... not sure.)
      source ~/lsst/loadLSST.sh
      setup sims_maf
    Setup UW ssh tunnel.  Email jmeyers314@gmail.com for more info on this.
    Run CHROMA_DIR/bin/analytic/catalog/make_catalogs.py
    Run CHROMA_DIR/bin/analytic/catalog/process_gal_catalog.py
    Run CHROMA_DIR/bin/analytic/catalog/process_star_catalog.py
    Run CHROMA_DIR/bin/analytic/catalog/gal_ML.py --ExtraTrees
    Run CHROMA_DIR/bin/analytic/catalog/star_ML.py --ExtraTrees
  Run CHROMA_DIR/bin/analytic/catalog/plot_bias_panel.py --outfile output/bias_panel.pdf
  Run CHROMA_DIR/bin/analytic/catalog/plot_bias_panel.py \
          --corrected --outfile output/corrected_bias_panel.pdf
  
Figure 7)
  Requires processed CatSim catalog as above.
  Run CHROMA_DIR/bin/analytic/catalog/bias_vs_corrected_panel.py
  Output to CHROMA_DIR/bin/analytic/catalog/output/bias_vs_corrected_panel.pdf

Figures 8-11, 13)
  Generate data for these by running CHROMA_DIR/bin/simulations/vs_z_data.py --paper
  Then create plots with CHROMA_DIR/bin/simulations/plot_vs_z.py
  Output to CHROMA_DIR/bin/simulations/output/ring_vs_z_DCR_noCorr_r2r2.pdf
  Output to CHROMA_DIR/bin/simulations/output/ring_vs_z_CS_noCorr_r2r2.pdf
  Output to CHROMA_DIR/bin/simulations/output/ring_vs_z_both_noCorr_r2r2.pdf
  Output to CHROMA_DIR/bin/simulations/output/ring_vs_z_both_noCorr_FWHMHLR.pdf
  Output to CHROMA_DIR/bin/simulations/output/ring_vs_z_both_Perturb_FWHMHLR.pdf

Figure 12)
  First generate data. From CHROMA_DIR/bin/simulations/ run:
  $ python one_ring_test.py --redshift 0.6 --zenith_angle 60 --gal_r2 0.3 -n4 --moffat \
                            --maximum_fft_size 16384 --diagnostic output/d.fits
  Next make the plot.
  $ python plot_ring_diagnostic.py output/d.fits
  The paper plot is:
  CHROMA_DIR/bin/simulations/output/ring_diagnostic-g1-0.0-g2-0.0-beta1.0471975512.pdf
